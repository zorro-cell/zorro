/*
 * @PluginName     ÊØèÊó•ÂæÆÂçö + ÊäñÈü≥ ÁÉ≠Ê¶úÁÆÄËÆØ
 * @Author         Ê¢¶Áî∞ / ChatGPTËÅîÂêàÁºñÂÜô
 * @ScriptType     cron
 * @Cron           0 8,12,20 * * *
 * @UpdateTime     2025-07-29
 * @UseFor         Loon Plugins ÂÆöÊó∂ÈÄöÁü•Â±ïÁ§∫
 */

const WB_API = "https://api.vvhan.com/api/hotlist/wbHot";
const DY_API = "https://api.istero.com/resource/v1/douyin/top?token=RQofNsxcAgWNEhPEigHNQHRfYOBvoIjX";

// Ê∑ªÂä† User-Agent Â¢ûÂº∫ÂÖºÂÆπÊÄß
const headers = {
  "User-Agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148"
};

Promise„ÄÇall([
  httpGet(WB_API, headers),
  httpGet(DY_API, headers)
]).then(([wbList, dyList]) => {
  const list = [];
  if (wbList.length > 0) {
    wbList.slice(0, 5).forEach((item, i) => list.push(`${i + 1}. ÂæÆÂçöÔºö${item.title}`));
  } else {
    list.push("ÂæÆÂçöÁÉ≠Ê¶ú ‚ùå Ëé∑ÂèñÂ§±Ë¥•");
  }

  if (dyList.length > 0) {
    dyList.slice(0, 5).forEach((item, i) => list.push(`${i + 6}. ÊäñÈü≥Ôºö${item.title}`));
  } else {
    list.push("ÊäñÈü≥ÁÉ≠Ê¶ú ‚ùå Ëé∑ÂèñÂ§±Ë¥•");
  }

  const notifyBody = list.join("\n");
  $notification.post("üìå ÊØèÊó•ÁÉ≠Ê¶úÁÆÄËÆØ", "ÂæÆÂçö + ÊäñÈü≥ Top10"Ôºå notifyBody);
  $done();
}).catch(error => {
  console.log("ËØ∑Ê±ÇÂºÇÂ∏∏:", error);
  $notification.post("ÁÉ≠Ê¶úËé∑ÂèñÂ§±Ë¥•", "", error.toString());
  $done();
});

function httpGet(url, headers) {
  return new Promise(resolve => {
    $httpClient.get({ url, headers }, (err, resp, data) => {
      if (err) {
        console.log(`ËØ∑Ê±ÇÂ§±Ë¥•: ${url}`);
        resolve([]);
        return;
      }
      try {
        const obj = JSON.parse(data);
        if (url.includes("douyin")) {
          // ÊäñÈü≥ÁÉ≠Ê¶úÊï∞ÊçÆÊ†ºÂºè
          const topList = obj?.data?.topList || [];
          resolve(topList.map(item => ({ title: item.title || item.name || "-" })));
        } else if (url.includes("wbHot")) {
          // ÂæÆÂçöÁÉ≠Ê¶úÊï∞ÊçÆÊ†ºÂºè
          const topList = obj?.data || [];
          resolve(topList.map(item => ({ title: item.title || "-" })));
        } else {
          resolve([]);
        }
      } catch (e) {
        console.log("Ëß£ÊûêÂ§±Ë¥•:", e);
        resolve([]);
      }
    });
  });
}
